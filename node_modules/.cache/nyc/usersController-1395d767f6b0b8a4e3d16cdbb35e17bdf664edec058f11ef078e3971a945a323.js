function cov_1amf44wb5a(){var path="/var/www/html/l314-s1/controllers/usersController.js";var hash="b6a09e1d261288a611f14e1295540ba24dc56fe0";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/var/www/html/l314-s1/controllers/usersController.js",statementMap:{"0":{start:{line:1,column:15},end:{line:1,column:36}},"1":{start:{line:3,column:0},end:{line:125,column:1}},"2":{start:{line:5,column:8},end:{line:10,column:10}},"3":{start:{line:8,column:16},end:{line:8,column:43}},"4":{start:{line:13,column:8},end:{line:23,column:11}},"5":{start:{line:16,column:12},end:{line:20,column:13}},"6":{start:{line:17,column:16},end:{line:17,column:43}},"7":{start:{line:19,column:16},end:{line:19,column:75}},"8":{start:{line:22,column:12},end:{line:22,column:74}},"9":{start:{line:27,column:8},end:{line:35,column:9}},"10":{start:{line:28,column:12},end:{line:32,column:15}},"11":{start:{line:31,column:17},end:{line:31,column:44}},"12":{start:{line:34,column:5},end:{line:34,column:72}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:17},end:{line:4,column:18}},loc:{start:{line:4,column:35},end:{line:11,column:5}},line:4},"1":{name:"(anonymous_1)",decl:{start:{line:7,column:12},end:{line:7,column:13}},loc:{start:{line:7,column:26},end:{line:9,column:13}},line:7},"2":{name:"(anonymous_2)",decl:{start:{line:12,column:19},end:{line:12,column:20}},loc:{start:{line:12,column:38},end:{line:24,column:5}},line:12},"3":{name:"(anonymous_3)",decl:{start:{line:15,column:16},end:{line:15,column:17}},loc:{start:{line:15,column:31},end:{line:21,column:9}},line:15},"4":{name:"(anonymous_4)",decl:{start:{line:21,column:17},end:{line:21,column:18}},loc:{start:{line:21,column:32},end:{line:23,column:9}},line:21},"5":{name:"(anonymous_5)",decl:{start:{line:26,column:15},end:{line:26,column:16}},loc:{start:{line:26,column:33},end:{line:36,column:4}},line:26},"6":{name:"(anonymous_6)",decl:{start:{line:30,column:19},end:{line:30,column:20}},loc:{start:{line:30,column:33},end:{line:32,column:14}},line:30}},branchMap:{"0":{loc:{start:{line:16,column:12},end:{line:20,column:13}},type:"if",locations:[{start:{line:16,column:12},end:{line:20,column:13}},{start:{line:16,column:12},end:{line:20,column:13}}],line:16},"1":{loc:{start:{line:27,column:8},end:{line:35,column:9}},type:"if",locations:[{start:{line:27,column:8},end:{line:35,column:9}},{start:{line:27,column:8},end:{line:35,column:9}}],line:27},"2":{loc:{start:{line:27,column:11},end:{line:27,column:50}},type:"binary-expr",locations:[{start:{line:27,column:11},end:{line:27,column:29}},{start:{line:27,column:33},end:{line:27,column:50}}],line:27}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"b6a09e1d261288a611f14e1295540ba24dc56fe0"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1amf44wb5a=function(){return actualCoverage;};}return actualCoverage;}cov_1amf44wb5a();const models=(cov_1amf44wb5a().s[0]++,require('../models'));cov_1amf44wb5a().s[1]++;module.exports={getAllUsers:function(req,res){cov_1amf44wb5a().f[0]++;cov_1amf44wb5a().s[2]++;models.Users.findAll().then(function(user){cov_1amf44wb5a().f[1]++;cov_1amf44wb5a().s[3]++;res.status(200).json(user);});},getAnUserById:function(req,res){cov_1amf44wb5a().f[2]++;cov_1amf44wb5a().s[4]++;models.Users.findOne({where:{id:req.params.idUser}}).then(function(user){cov_1amf44wb5a().f[3]++;cov_1amf44wb5a().s[5]++;if(user){cov_1amf44wb5a().b[0][0]++;cov_1amf44wb5a().s[6]++;res.status(200).json(user);}else{cov_1amf44wb5a().b[0][1]++;cov_1amf44wb5a().s[7]++;res.status(404).json({error:'Utilisateur introuvable'});}}).catch(function(error){cov_1amf44wb5a().f[4]++;cov_1amf44wb5a().s[8]++;res.status(500).json({error:'Erreur interne au  serveur'});});},createUser:function(req,res){cov_1amf44wb5a().f[5]++;cov_1amf44wb5a().s[9]++;if((cov_1amf44wb5a().b[2][0]++,req.body.firstname)&&(cov_1amf44wb5a().b[2][1]++,req.body.lastname)){cov_1amf44wb5a().b[1][0]++;cov_1amf44wb5a().s[10]++;models.Users.create({firstname:req.body.firstname,lastname:req.body.lastname}).then(function(user){cov_1amf44wb5a().f[6]++;cov_1amf44wb5a().s[11]++;res.status(200).json(user);});}else{cov_1amf44wb5a().b[1][1]++;cov_1amf44wb5a().s[12]++;res.status(500).json({"Saisissez des identifiants valides !":500});}}/*createUser: function(req, res){
console.log('Request Body:', req.body);
    if (req.body && req.body.firstname && req.body.lastname) {
        var firstname = req.body.firstname;
        var lastname = req.body.lastname;

        console.log('Creating user with firstname:', firstname, 'and lastname:', lastname);

        models.Users.create(
            { firstname: firstname, lastname: lastname }
        ).then(function(user) {
            console.log('User created successfully:', user);
            res.status(200).json(user);
        }).catch(function(error) {
            console.error('Erreur lors de la création de l\'utilisateur :', error);
            res.status(500).json({ message: 'Erreur interne au serveur' });
        });
    } else {
        console.log('Invalid credentials. Missing firstname or lastname.');
        res.status(500).json({ message: 'Saisissez des identifiants valides !' });
    }
},

updateUser: function(req, res) {
    const updatedData = {
        firstname: req.body.firstname,
        lastname: req.body.lastname,
        // Ajoutez d'autres champs à mettre à jour au besoin
    };

    models.Users.update(updatedData, {
        where: { id: req.body.id }
    }).then(function (rowsUpdated) {
        if (rowsUpdated[0] === 1) {
            // L'utilisateur a été mis à jour avec succès
            res.status(200).json({ message: 'Utilisateur mis à jour avec succès' });
        } else {
            // Aucun utilisateur trouvé avec l'ID spécifié
            res.status(404).json({ error: 'Aucun utilisateur trouvé avec l\'ID spécifié' });
        }
    }).catch(function (error) {
        // Une erreur s'est produite lors de la mise à jour
        console.error('Erreur lors de la mise à jour de l\'utilisateur :', error);
        res.status(500).json({ error: 'Erreur interne au serveur' });
    });
}*/ /*createUser: function(req, res){ 
    const { firstname, lastname } = req.body || {};

    if(firstname && lastname){
        models.User.create(
            {firstname, lastname}
        ).then(user => res.status(200).json(user))
        .catch(error => res.status(500).json({"message": "Erreur lors de la création de l'utilisateur"}));
    }else{ 
        res.status(500).json({"message": "Saisissez des identifiants valides !"})
    };
},

deleteUser: function(req, res) {
    // Vérifier si req.params.idUser est défini
    if (!req.params.idUser) {
        return res.status(400).json({ error: 'L\'ID de l\'utilisateur à supprimer est manquant' });
    }

    const userId = req.params.idUser;

    models.Users.destroy({
        where: { id: id }
    }).then(function (rowsDeleted) {
        if (rowsDeleted === 1) {
            // L'utilisateur a été supprimé avec succès
            res.status(200).json({ message: 'Utilisateur supprimé avec succès' });
        } else {
            // Aucun utilisateur trouvé avec l'ID spécifié
            res.status(404).json({ error: 'Aucun utilisateur trouvé avec l\'ID spécifié' });
        }
    }).catch(function (error) {
        // Une erreur s'est produite lors de la suppression
        console.error('Erreur lors de la suppression de l\'utilisateur :', error);
        res.status(500).json({ error: 'Erreur interne au serveur' });
    });
}*/};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,